plot(1,5)
plot(1:5)
install.packages("plyr")
install.packages("MASS")
install.packages("ggplot2")
install.packages("dplyr")
2.5*5
2.1*5
a <- 5
a
b = 10
A+b
a+b
exp(11.51293)
z = seq(2,5,0.2)
z = seq(1,5,1)
length(z)
x = seq(-2*pi, 2*pi, 0.1)
y = sin(x)
plot(x,y,type = "l")
x
y
length(x)
length(y)
clear
log2(2^5)
log(exp(1)*exp(1))
labels(x)
labels(a)
labels(a)
plot(x,y,xlab = "x-axis")
plot(x,y,xlab = "x-axis",type = "l")
plot(x,y,xlab = "x-axis",type = "l",title(line = "sin(x)"))
plot(x,y,xlab = "x-axis",type = "l",title(line = "sin"))
data()
View(CO2)
mean(co2)
median(co2)
co2$type
co2$conc
mean(co2$conc)
x <- c(12,43,56,76,2,3)
y <- c(254,746,134,576,244)
tab <- data.frame(x, y)
y <- c(254,746,134,576,244,435)
tab <- data.frame(x, y)
View(tab)
mean(tab$x)
mean(tab)
tab$z <- tab$y - tab$x
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/testscript.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/reproducedTestScript.R', echo=TRUE)
getwd()
setwd("C:/Users/Vibhanshu Shandil/Desktop/Myproject R")
getwd()
captaincy <- read.csv("CaptaincyData.csv")
View(captaincy)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/Slicing.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/Slicing.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/Slicing.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/Slicing.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/Slicing.R', echo=TRUE)
print(GreatRecord)
# Clear R workspace
rm(list = ls() )
column <- c(9,10,11,12)
rows <- c(13,14,15,16)
matrixA <- matrix(column, rows, nrow = 2, ncol = 4, byrow = TRUE)
rm(list = ls() )
row1 <- c(9,10,11,12)
row2 <- c(13,14,15,16)
Data <- data.frame(row1, row2)
View(Data)
rm(list = ls() )
row1 <- c(9,10,11,12)
row2 <- c(13,14,15,16)
row1 + row2
# Clear R workspace
rm(list = ls() )
row1 <- c(9,10,11,12)
row2 <- c(13,14,15,16)
Data <- c(row1, row2)
matrixA <- matrix(Data, nrow = 2, ncol = 4, byrow = TRUE)
print(matrixA)
rm(list = ls() )
Data <- data.frame(row1, row2)
matrixB <- as.matrix(Data)
row1 <- c(9,10,11,12)
row2 <- c(13,14,15,16)
Data <- data.frame(row1, row2)
matrixB <- as.matrix(Data)
print(matrixB)
install.packages("libxml2-dev")
install.packages("XML")
View("Iris")
View("iris")
View(iris)
Summary(iris)
summary(iris)
class(iris)
typeof(iris)
head(iris, 6)
tail(iris, 5)
str(iris)
View(iris)
iris$Petal.Width <- factor(iris$Petal.Width)
str(iris)
class(iris$Petal.Width)
iris$Petal.Width <- as.numeric(iris$Petal.Width)
str(iris)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/lists.R', echo=TRUE)
matrixA <- matrix(forMatrix, nrow = 5, ncol = 3, byrow = TRUE)
Mylist <- list(numVector, matrixA, iris)
names(Mylist) <- c("vector", "matrix", "data Type")
print(Mylist)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/myPlots.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/myPlots.R', echo=TRUE)
hist(movies$imdb_num_votes)
hist(movies$imdb_num_votes, main = "imdb votes")
pie(movies$mpaa_rating)
pie(movies$mpaa_rating)
table(movies$mpaa_rating)
pieTable <- table(movies$mpaa_rating)
View(pieTable)
pie(pieTable)
hist(movies$imdb_num_votes, main = "imdb votes")
help(head())
help(head
help(head)
topCritic <- head(movies$critics_score, n = 10)
View(topCritic)
barplot(topCritic)
plot(movies$imdb_rating, movies$imdb_num_votes)
cor(movies$imdb_rating, movies$imdb_num_votes)
rm(list = ls())
matrixA <- matrix(vector1 & vector2, nrow = 4, ncol = 2, byrow = FALSE)
vector1 <- c(9,10,11,12)
vector2 <- c(13,14,15,16)
matrixA <- matrix(vector1 & vector2, nrow = 4, ncol = 2, byrow = FALSE)
View(matrixA)
print(matrixA)
matrixA <- matrix(vector1 & vector2, nrow = 4, ncol = 2)
print(matrixA)
matrixA <- matrix(vector1 + vector2, nrow = 4, ncol = 2)
print(matrixA)
rm(list = ls())
vector1 <- c(9,10,11,12)
vector2 <- c(13,14,15,16)
matrixA <- matrix(vector1, vector2, nrow = 4, ncol = 2)
print(matrixA)
rm(list = ls())
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/operationMatrix.R', echo=TRUE)
vector3 <- c(17,18,19,20)
matrixA <- cbind(vector3)
print(matrixA)
rm(list = ls())
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/operationMatrix.R', echo=TRUE)
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/operationMatrix.R', echo=TRUE)
#ggplot
View(mtcars)
str(mtcars)
#ggplot
library(ggplot2)
ggplot(data = mtcars, mapping = aes(x = mpg, y = wt)) + geom_point()
cor(mtcars$mpg,mtcars$wt)
ggsave("cor(mpg,wt).jpeg")
#ggplot aesthetics
ggplot(data = mtcars, mapping = aes(x = cyl)) + geom_bar()
#ggplot aesthetics
ggplot(data = mtcars, mapping = aes(x = cyl)) + geom_bar() +
labs(y = "car count", title = "cylindar bar graph")
rm(list = ls())
library(dplyr)
powerCars <- filter(mtcars, hp < 100 & cyl = 3)
powerCars <- filter(mtcars, hp < 100 & cyl == 3)
View(powerCars)
powerCars <- filter(mtcars, hp > 100 & cyl == 3)
ArrangeMPG <- arrange(mtcars, mpg)
View(ArrangeMPG)
ArrangeMPG <- arrange(mtcars,desc(mpg))
View(ArrangeMPG)
powerCars <- filter(mtcars, cyl == 3)
powerCars <- filter(mtcars, hp > 100 & cyl == 4)
View(powerCars)
View(airquality)
Data <- select(airquality, Ozone, Wind, Temp)
View(Data)
renameInmtcars <- rename(mtcars, mpg = "MilesPerGallon", cyl = "Cylinder")
renameInmtcars <- rename(mtcars, MilesPerGallon = "mpg",
Cylinder = "cyl")
View(renameInmtcars)
rm = (list = ls())
rm = (list = ls())
rm = (list = ls())
rm(list = ls())
#load libraries
library(dplyr)
View(iris)
Species <- group_by(iris, Species)
print(Species)
S <- group_by(iris, Species)
#clear memory
rm(list = ls())
S <- group_by(iris, Species)
print(S)
print(S)
summarise(S, num = n())
iris %>% group_by(Sepal.Length, Sepal.Width) %>% summarise(mean())
iris %>% group_by(Sepal.Length, Sepal.Width) %>%
summarise(mean(Sepal.Length, Sepal.Width))
class(iris$Sepal.Length)
class(iris$Sepal.Width)
iris %>% group_by(Sepal.Length, Sepal.Width) %>%
summarise(mean(Sepal.Length, Sepal.Width))
iris %>% group_by(Species) %>%
summarise(mean(Sepal.Length, Sepal.Width))
iris %>% group_by(Species) %>%
summarise(mean(Sepal.Length))
iris %>% group_by(Species) %>%
summarise(mean(Sepal.Length))%>% summarise(mean(Sepal.Width))
iris %>% group_by(Species) %>%
summarise(mean(Sepal.Length)) & summarise(mean(Sepal.Width))
iris %>% group_by(Species) %>%
summarise(mean(Sepal.Length)) | summarise(mean(Sepal.Width))
iris %>% group_by(Species) %>% summarise(mean(Sepal.Width))
#clear memory
rm(list = ls())
S <- group_by(iris, Species)
summarise(S, num = n())
iris %>% group_by(Species) %>%
summarise(mean(Sepal.Length))
iris %>% group_by(Species) %>% summarise(mean(Sepal.Width))
source('C:/Users/Vibhanshu Shandil/Desktop/Myproject R/pipeOperation.R', echo=TRUE)
View(movies)
View(movies)
View(moviesData)
library(readr)
moviesData <- read_csv("moviesData.csv")
View(moviesData)
View(moviesData)
Score <- 0
if(moviesData$audience_score > moviesData$critics_score){
score = score + 1
}
print(Score)
rm(list = ls())
score <- 0
if(moviesData$audience_score > moviesData$critics_score){
score = score + 1
}
print(Score)
score <- 0
if(moviesData$audience_score > moviesData$critics_score){
score = score + 1
}
print(score)
score <- 0
if(moviesData$audience_score > moviesData$critics_score){
score <-  score + 1
}
print(score)
View(iris)
if(iris$Sepal.Length > iris$Petal.Length){
print(iris$Species)
}
sum(ifelse(iris$Sepal.Length > iris$Petal.Length, 1, 0))
comb <- function(a, b){
factorial(a)/(factorial(b)*factorial(a-b))
}
print(comb(5,2))
